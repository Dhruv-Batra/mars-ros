<launch>
    <env name="ROSCONSOLE_FORMAT" value="[${node}] [${severity}] [WallTime: ${time}]: ${message}" />

    <arg name="autonomy" default="false" />
    <arg name="hero" default="false" />

    <!-- d435i camera -->
    <group ns="d435" if="$(eval autonomy and false)">
        <include file="$(find navigation)/launch/d435_camera.launch"></include>
    </group>
    <group ns="t265">
        <include file="$(find navigation)/launch/t265_camera.launch"></include>
    </group>
    
    <!-- rpc server -->
    <node name="rpc_server" pkg="rpc-server" type="grpc-server" output="screen" />

    <!-- hero communication node -->
    <group if="$(eval hero)">
        <node name="hero_permission" pkg="hero_board" type="permission.sh" output="screen" />
        <node name="hero_comm" pkg="hero_board" type="send_recv.py" output="screen" />
    </group>

    <!-- static transforms -->
    <node pkg="navigation" type="static_tf" name="static_tf" output="screen"></node>

    <group if="$(eval autonomy)">
        <!-- depth to point cloud -->
        <include file="$(find processing)/launch/pointcloud.launch">
            <arg name="rgb_pc" value="false" />
        </include>

        <!-- apriltag detection -->
        <include file="$(find apriltag_ros)/launch/continuous_detection.launch">
            <arg name="camera_name" value="/camera/color" />
            <arg name="camera_frame" value="camera_link" />
            <arg name="image_topic" value="image_raw" />
        </include>

        <!-- <node pkg="navigation" type="fake_odom" name="odom_node" output="screen"> -->
            <!-- <param name="odom_param" value="param_value" /> -->
        <!-- </node> -->
    </group>
</launch>